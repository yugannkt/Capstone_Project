# name: CI/CD Pipeline #shs
# on:
#   push:
#     branches:
#       - main
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: us-east-1

#       - name: Login to Amazon ECR
#         run: |
#           aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 975050161532.dkr.ecr.us-east-1.amazonaws.com

#       - name: Build Backend Docker image
#         run: docker build -t capstone_proj_backend ./backend

#       - name: Build Frontend Docker image
#         run: docker build -t capstone_proj_frontend ./frontend

#       - name: Tag and Push Backend Docker image to ECR
#         run: |
#           docker tag capstone_proj_backend:latest 975050161532.dkr.ecr.us-east-1.amazonaws.com/capstone_proj_backend:latest
#           docker push 975050161532.dkr.ecr.us-east-1.amazonaws.com/capstone_proj_backend:latest

#       - name: Tag and Push Frontend Docker image to ECR
#         run: |
#           docker tag capstone_proj_frontend:latest 975050161532.dkr.ecr.us-east-1.amazonaws.com/capstone_proj_frontend:latest
#           docker push 975050161532.dkr.ecr.us-east-1.amazonaws.com/capstone_proj_frontend:latest
# name: Deploy to EC2

# on:
#   push:
#     branches:
#       - main  # Change this if you want to use a different branch

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: us-east-1

#       - name: Deploy to EC2
#         uses: appleboy/ssh-action@v0.1.1
#         with:
#           host: ${{ secrets.EC2_HOST }}  # Your EC2 public IP or DNS
#           username: ${{ secrets.EC2_USER }}  # Your EC2 username
#           key: ${{ secrets.EC2_PRIVATE_KEY }}  # Your private key
#           script: |
#             # Create .ssh directory if it doesn't exist
#             mkdir -p ~/.ssh

#             # Add the public key to authorized_keys
#             echo "${{ secrets.EC2_PUBLIC_KEY }}" >> ~/.ssh/authorized_keys

#             # Set permissions
#             chmod 700 ~/.ssh
#             chmod 600 ~/.ssh/authorized_keys

#             # (Optional) Pull Docker images and restart containers
#             aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 975050161532.dkr.ecr.us-east-1.amazonaws.com
#             docker pull 975050161532.dkr.ecr.us-east-1.amazonaws.com/capstone_proj_backend:latest
#             docker pull 975050161532.dkr.ecr.us-east-1.amazonaws.com/capstone_proj_frontend:latest
#             docker stop capstone_proj_backend || true
#             docker stop capstone_proj_frontend || true
#             docker rm capstone_proj_backend || true
#             docker rm capstone_proj_frontend || true
#             docker run -d --name capstone_proj_backend -p 5000:5000 975050161532.dkr.ecr.us-east-1.amazonaws.com/capstone_proj_backend:latest
#             docker run -d --name capstone_proj_frontend -p 80:80 975050161532.dkr.ecr.us-east-1.amazonaws.com/capstone_proj_frontend:latest

#             docker run -d --name capstone_proj_backend -p 5000:5000 975050161532.dkr.ecr.us-east-1.amazonaws.com/capstone_proj_backend:latest
#             docker run -d --name capstone_proj_frontend -p 80:80 975050161532.dkr.ecr.us-east-1.amazonaws.com/capstone_proj_frontend:latest
name: CI/CD Pipeline
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: self-hosted  # Use self-hosted runner
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 975050161532.dkr.ecr.us-east-1.amazonaws.com

      - name: Build Backend Docker image
        run: docker build -t capstone_proj_backend ./backend

      - name: Build Frontend Docker image
        run: |
          echo "REACT_APP_API_URL=https://${{ secrets.EC2_PUBLIC_IP }}:5000" >> .env
          docker build -t capstone_proj_frontend ./frontend

      - name: Tag and Push Backend Docker image to ECR
        run: |
          docker tag capstone_proj_backend:latest 975050161532.dkr.ecr.us-east-1.amazonaws.com/capstone_proj_backend:latest
          docker push 975050161532.dkr.ecr.us-east-1.amazonaws.com/capstone_proj_backend:latest

      - name: Tag and Push Frontend Docker image to ECR
        run: |
          docker tag capstone_proj_frontend:latest 975050161532.dkr.ecr.us-east-1.amazonaws.com/capstone_proj_frontend:latest
          docker push 975050161532.dkr.ecr.us-east-1.amazonaws.com/capstone_proj_frontend:latest

      - name: Deploy to Docker
        run: |
          # Pull the latest images
          docker pull 975050161532.dkr.ecr.us-east-1.amazonaws.com/capstone_proj_backend:latest
          docker pull 975050161532.dkr.ecr.us-east-1.amazonaws.com/capstone_proj_frontend:latest
          
          # Stop and remove existing containers if they exist
          docker stop capstone_proj_backend || true
          docker rm capstone_proj_backend || true
          docker stop capstone_proj_frontend || true
          docker rm capstone_proj_frontend || true
          
          # Run new containers with port mapping
          docker run -d --restart always --name capstone_proj_backend -p 5000:5000 975050161532.dkr.ecr.us-east-1.amazonaws.com/capstone_proj_backend:latest
          docker run -d --restart always --name capstone_proj_frontend -p 80:80 975050161532.dkr.ecr.us-east-1.amazonaws.com/capstone_proj_frontend:latest
